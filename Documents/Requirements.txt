1. Shopper: Individual who is buying the product online.
2. Merchant: The seller of the product. For example, Apple or Amazon.
3. Payment Gateway: Responsible for validating requests, storing card information and forwarding
payment requests and accepting payment responses to and from the acquiring bank.
4. Acquiring Bank: Allows us to do the actual retrieval of money from the shopperâ€™s card and payout to the
merchant. It also performs some validation of the card information and then sends the payment details
to the appropriate 3rd party organization for processing.



Build the Payment Gateway Only
Simulate Acquiring Bank Component


Merchant should 

1. A merchant should be able to process a payment through the payment gateway and receive either a
successful or unsuccessful response
2. A merchant should be able to retrieve the details of a previously made payment



Merchant Paylod:
merchant should be able to submit a request to the payment gateway
A payment request should include
appropriate fields such as the card number, expiry month/date, amount, currency, and cvv.

Process Payment (async, command, fire & forget)
Request
{
	...
	"CardNumber": ""
	"CardCVV": ""
	"ExpiryDate": ""
	"Amount": "",
	"Currency": ""
}
Response
{
	GatewayPaymentId: guid
}


Retrieve Details:
 The response should include a masked card number and card details along with a
status code which indicates the result of the payment.


Request
{
	GatewayPaymentId: guid	
}
Response
{
	"CardNumber": ""
	"CardCVV": integer
	"ExpiryDate": "YYYY-MM"
	"Amount": float,
	"Currency": string
	"PaymentStatus": processing / failed / succeded,
	"PaymentFailedReason": string
}

Acquiring Bank (Mocked):
Response:
We should assume that a bank response returns a unique identifier and a status that
indicates whether the payment was successful. 
Request
{
	"CardNumber": ""
	"CardCVV": ""
	"ExpiryDate": ""
	"Amount": "",
	"Currency": ""
}
Payment Response 
{
  "PaymentId": guid,
  "PaymentStatus": 	processing / 
			rejected-insufficient-funds / 
			rejected-declined / 
			rejected-incorrect / 
			rejected-blocked / 
			succeded
}




